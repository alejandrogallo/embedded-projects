

ABC = {'a':[
'00000',
'0***0',
'0***0',
'00000',
'0***0'
], 'b':[
'00000',
'0***0',
'0000*',
'0***0',
'00000'
], 'c':[
'00000',
'0****',
'0****',
'0****',
'00000'
], 'd':[
'0000*',
'0***0',
'0***0',
'0***0',
'0000*'
], 'e':[
'00000',
'0****',
'0000*',
'0****',
'00000'
], 'f':[
'00000',
'0****',
'0000*',
'0****',
'0****'
], 'g':[
'00000',
'0****',
'0**00',
'0***0',
'00000'
], 'h':[
'0***0',
'0***0',
'00000',
'0***0',
'0***0'
], 'i':[
'00000',
'**0**',
'**0**',
'**0**',
'00000'
], 'j':[
'00000',
'****0',
'****0',
'0***0',
'*000*'
], 'k':[
'0***0',
'0**0*',
'000**',
'0**0*',
'0***0'
], 'l':[
'0****',
'0****',
'0****',
'0****',
'00000'
], 'm':[
'0***0',
'00*00',
'0*0*0',
'0***0',
'0***0'
], 'n':[
'0***0',
'00**0',
'0*0*0',
'0**00',
'0***0'
], 'o':[
'*000*',
'0***0',
'0***0',
'0***0',
'*000*'
], 'p':[
'0000*',
'0***0',
'0000*',
'0****',
'0****'
], 'q':[
'00000',
'0***0',
'0***0',
'00000',
'**0**'
], 'r':[
'0000*',
'0***0',
'0000*',
'0**0*',
'0***0'
], 's':[
'00000',
'0****',
'00000',
'****0',
'00000'
], 't':[
'00000',
'**0**',
'**0**',
'**0**',
'**0**'
], 'u':[
'0***0',
'0***0',
'0***0',
'0***0',
'00000'
], 'v':[
'0***0',
'0***0',
'*0*0*',
'*0*0*',
'**0**'
], 'w':[
'0***0',
'0***0',
'0*0*0',
'0*0*0',
'*0*0*'
], 'x':[
'0***0',
'*0*0*',
'**0**',
'*0*0*',
'0***0'
], 'y':[
'0***0',
'0***0',
'*0*0*',
'**0**',
'**0**'
], 'z':[
'00000',
'***0*',
'**0**',
'*0***',
'00000'
], '0':[
'00000',
'0**00',
'0*0*0',
'00**0',
'00000'
], '1':[
'**0**',
'*00**',
'**0**',
'**0**',
'*000*'
], '2':[
'0000*',
'****0',
'*000*',
'0****',
'00000'
], '3':[
'00000',
'****0',
'*000*',
'****0',
'00000'
], '4':[
'0****',
'0****',
'0*0**',
'00000',
'**0**'
], '5':[
'00000',
'0****',
'00000',
'****0',
'00000'
], '7':[
'00000',
'****0',
'***0*',
'**0**',
'**0**'
], '6':[
'00000',
'0****',
'00000',
'0***0',
'00000'
], '8':[
'00000',
'0***0',
'00000',
'0***0',
'00000'
], '9':[
'00000',
'0***0',
'00000',
'****0',
'00000']
, ' ':[
'*****',
'*****',
'*****',
'*****',
'*****']
, '+':[
'00*00',
'*****',
'**0**',
'0***0',
'*000*'
]
, '-':[
'00*00',
'0***0',
'**0**',
'*****',
'00000'
]
, '<':[
'00*00',
'0*0*0',
'0***0',
'*0*0*',
'**0**'
]
, '*':[
'0*0*0',
'*000*',
'00000',
'*000*',
'0*0*0'
]
, '.':[
'**0**',
'*0*0*',
'00000',
'0*0*0',
'00000'
]
, '!':[
'00000',
'*000*',
'**0**',
'*****',
'**0**'
]
, '-':[
'*****',
'*****',
'*000*',
'*****',
'*****'
]
}




anim1=[
[
'000**',
'000**',
'000**',
'*****',
'*****'
],
[
'*****',
'*****',
'**000',
'**000',
'**000'
],
[
'*****',
'*****',
'000**',
'000**',
'000**'
],
[
'**000',
'**000',
'**000',
'*****',
'*****'
],
[
'*0000',
'*0000',
'*0000',
'*****',
'*****'
],
[
'00000',
'00000',
'00000',
'*****',
'*****'
],
[
'00000',
'00000',
'00000',
'0****',
'0****'
],
[
'00000',
'00000',
'00000',
'00***',
'00***'
],
[
'00000',
'00000',
'00000',
'000**',
'000**'
],
[
'00000',
'00000',
'00000',
'0000*',
'0000*'
],
[
'00000',
'00000',
'00000',
'00000',
'00000'
],
[
'*0000',
'00000',
'00000',
'00000',
'00000'
],
[
'**000',
'00000',
'00000',
'00000',
'00000'
],
[
'***00',
'00000',
'00000',
'00000',
'00000'
],
[
'****0',
'00000',
'00000',
'00000',
'00000'
],
[
'*****',
'00000',
'00000',
'00000',
'00000'
],
[
'*****',
'0000*',
'00000',
'00000',
'00000'
],
[
'*****',
'0000*',
'000*0',
'00000',
'00000'
],
[
'*****',
'0000*',
'000*0',
'00*00',
'00000'
],
[
'*****',
'0000*',
'000*0',
'00*00',
'0*000'
],
[
'*****',
'0000*',
'000*0',
'00*00',
'**000'
],
[
'*****',
'0000*',
'000*0',
'0**00',
'**000'
],
[
'*****',
'0000*',
'00**0',
'0**00',
'**000'
],
[
'*****',
'000**',
'00**0',
'0**00',
'**000'
],
[
'*****',
'00***',
'0***0',
'***00',
'**000'
],
[
'*****',
'00***',
'0****',
'****0',
'***00'
],
[
'*****',
'00***',
'0***0',
'***00',
'*****'
],
[
'*****',
'00**0',
'0**00',
'*****',
'*****'
],
[
'*****',
'*00*0',
'*0*00',
'*****',
'*****'
],
[
'*****',
'*000*',
'*000*',
'*****',
'*****'
],
[
'*****',
'*****',
'*000*',
'*****',
'*****'
]
]




def charListToCode(charList):
	for charArray in charList:
		charToCode(charArray),

def charToCode(charArray,invert=False, vel="vel"):
	onChar = "0"
	if invert:
		onChar="*"
	print "for (int i = 0; i < "+vel+"; ++i){"
	delayTimes=0;
	for y,row in enumerate(charArray):
		for x,char in enumerate(row):
			if char==onChar:
				if delayTimes:
					print("_delay_ms("+str(delayTimes)+"*delay);");
					delayTimes=0;
				print("DRAW"+str(x)+str(y)+"();");
			delayTimes+=1;
	if delayTimes:
		print("_delay_ms("+str(delayTimes)+"*delay);");
	print "}"

def translateLeft(charArray1, charArray2, index,separation=1):
	whole = ["","","","",""];
	for i in range(len(charArray1)):
		whole[i] = charArray1[i]+"*"*separation+charArray2[i];
	for i in range(len(whole)):
		whole[i] = whole[i][index: index+5]

	for string in whole:
		print "//"+string
	print ""
	return whole;

def stringToCodeTranslateLeft(string,separation=1):
	for j in range(len(string)):
		char = string[j]
		print "// Printing "+char
		charArray = ABC[char];
		if charArray:
			try:
				nextChar = string[j+1]
				nextCharArray = ABC[nextChar]
				print "// Printing "+nextChar
			except:
				nextChar = "-"
				nextCharArray = ABC[nextChar]
				print "// Printing "+nextChar
			#charToCode(charArray)
			for i in range(5+separation+1):
				frame = translateLeft(charArray,nextCharArray,i,separation=separation);
				charToCode(frame, vel="10")
		else:
			print "// Sorry, "+char+" is not in our dictionary";	


def stringToCode(string,invert=False):
	for char in string:
		charArray = ABC[char];
		if charArray:
			charToCode(charArray,invert=invert)
		else:
			print "// Sorry, "+char+" is not in our dictionary";	



stringToCodeTranslateLeft("keine grenzen");
#charListToCode(anim1)

